// Generated by CoffeeScript 1.3.3
(function() {
  var Controller, Form, TopBar, User,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  User = require('../models/user');

  Controller = require('./controller');

  Form = require('./base_form');

  TopBar = (function(_super) {

    __extends(TopBar, _super);

    TopBar.prototype.events = {
      'click button[name="login"]': 'logIn',
      'click button[name="signup"]': 'startSignUp',
      'click button[name="signout"]': 'signOut',
      'keypress input': 'logInOnEnter',
      'click a.top-bar-button': 'toggleDisplay',
      'change select.language': 'setLanguage'
    };

    function TopBar() {
      this.logInOnEnter = __bind(this.logInOnEnter, this);

      this.setLanguage = __bind(this.setLanguage, this);

      this.initLanguages = __bind(this.initLanguages, this);

      this.onError = __bind(this.onError, this);

      this.setUser = __bind(this.setUser, this);

      this.render = __bind(this.render, this);

      this.toggleDisplay = __bind(this.toggleDisplay, this);

      this.startSignUp = __bind(this.startSignUp, this);

      this.signOut = __bind(this.signOut, this);

      this.logIn = __bind(this.logIn, this);

      var _this = this;
      TopBar.__super__.constructor.apply(this, arguments);
      this.app || (this.app = "test");
      this.appName || (this.appName = "Test Name");
      this.currentLanguage || (this.currentLanguage = 'en');
      this.signUp = new Form.SignUpForm;
      User.project = this.app;
      User.bind('sign-in', this.setUser);
      User.bind('sign-in-error', this.onError);
      User.fetch().always(function() {
        if (User.current) {
          return _this.toggleDisplay();
        }
      });
      this.render();
      this.setAppName();
      this.initLanguages();
      this.setUser();
    }

    TopBar.prototype.elements = {
      '#zooniverse-top-bar-container': 'container',
      '#app-name': 'appNameContainer',
      '#zooniverse-top-bar-login': 'loginContainer',
      'select.language': 'langSelect'
    };

    TopBar.prototype.logIn = function(e) {
      var login, password, username;
      username = this.el.find('input[name="username"]').val();
      password = this.el.find('input[name="password"]').val();
      if ((username !== '') && (password !== '')) {
        this.el.find('.progress').show();
        return login = User.login({
          username: username,
          password: password
        });
      }
    };

    TopBar.prototype.signOut = function(e) {
      return User.logout();
    };

    TopBar.prototype.startSignUp = function(e) {
      return this.el.append(this.signUp.el);
    };

    TopBar.prototype.toggleDisplay = function(e) {
      return this.el.parent().toggleClass('hide-top-bar');
    };

    TopBar.prototype.render = function() {
      return this.html(require('../views/top_bar'));
    };

    TopBar.prototype.setAppName = function() {
      return this.appNameContainer.append(this.appName);
    };

    TopBar.prototype.setUser = function() {
      if (User.current) {
        this.signUp.el.remove();
        return this.loginContainer.html(this.userGreeting(User.current.name));
      } else {
        return this.loginContainer.html(this.loginForm);
      }
    };

    TopBar.prototype.loginForm = "<input name=\"username\" placeholder=\"username\" type=\"text\" />\n<input name=\"password\" placeholder=\"password\" type=\"password\" />\n<button name=\"login\" type=\"button\">Login</button>\n<button name=\"signup\" type=\"button\">Sign Up</button>\n<div class=\"errors\"></div>\n<div class=\"progress\"><p>Signing In...</p></div>";

    TopBar.prototype.userGreeting = function(user) {
      return "<h3> Hi, <strong>" + user + "</strong>. Welcome to " + this.appName + "!</h3>\n<button name=\"signout\" type=\"button\">Sign Out</button>";
    };

    TopBar.prototype.onError = function(error) {
      this.el.find('.progress').hide();
      this.el.find('.errors').append(error);
      return this.el.find('.errors').show();
    };

    TopBar.prototype.initLanguages = function() {
      var longLang, shortLang, _ref;
      _ref = this.languages;
      for (shortLang in _ref) {
        longLang = _ref[shortLang];
        this.langSelect.append("<option value=\"" + shortLang + "\">" + (shortLang.toUpperCase()) + " - " + (longLang.toUpperCase()) + "</option>");
      }
      return this.langSelect.val('en');
    };

    TopBar.prototype.setLanguage = function(e) {
      this.currentLanguage = this.langSelect.val();
      return this.el.trigger('request-translation', this.currentLanguage);
    };

    TopBar.prototype.logInOnEnter = function(e) {
      if (e.keyCode === 13) {
        return this.logIn();
      }
    };

    return TopBar;

  })(Controller);

  module.exports = TopBar;

}).call(this);
